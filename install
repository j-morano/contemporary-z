#!/usr/bin/env python3

import os
import argparse
from urllib import request
from pathlib import Path
from os.path import expandvars
import shutil
import re


parser = argparse.ArgumentParser(description='Install contemporary-z')
parser.add_argument(
    '--path',
    type=str,
    default='$HOME/.local/bin/',
    help='Path to install contemporary-z to'
)
parser.add_argument(
    '--shell',
    type=str,
    default=os.getenv('SHELL'),
    help='Shell to install contemporary-z for'
)
parser.add_argument(
   '--source',
    action='store_true',
)
parser.add_argument(
   '--update',
    action='store_true',
)
args = parser.parse_args()

args.path = expandvars(args.path)

if args.source:
    os.system("git clone https://github.com/sonarom/contemporary-z.git")
    os.system("$HOME/.cargo/bin/cargo install --path contemporary-z/cz")
else:
    request.urlretrieve(
        "https://github.com/j-morano/contemporary-z/releases/latest/download/cz",
        "cz"
    )
    st = os.stat('cz')
    os.chmod('cz', st.st_mode | 0o0111)
    shutil.move('cz', args.path)

if not args.update:
    if 'bash' in args.shell or 'zsh' in args.shell:
        request.urlretrieve(
            "https://raw.githubusercontent.com/j-morano/contemporary-z/main/z.sh",
            "z.sh"
        )
        with open('z.sh', 'r') as fp:
            zsh_contents = fp.read()

        bashrc_path = expandvars("$HOME/.bashrc")
        with open(bashrc_path, 'r') as fp:
            matches = re.findall("z\(\)", fp.read())
        if len(matches) == 0:
            with open(bashrc_path, 'a') as fp:
                fp.write(zsh_contents)
    elif 'fish' in args.shell:
        request.urlretrieve(
            "https://raw.githubusercontent.com/j-morano/contemporary-z/main/z.fish",
            "z.fish"
        )
        Path("$HOME/.config/fish/functions").mkdir(parents=True, exist_ok=True)
        shutil.copyfile('z.fish', expandvars('$HOME/.config/fish/functions/z.fish'))
